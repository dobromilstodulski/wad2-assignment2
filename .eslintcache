[{"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\index.js":"1","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\contexts\\authContext.js":"2","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\contexts\\genresContext.js":"3","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\contexts\\moviesContext.js":"4","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedHomePage.js":"5","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedMovieDetailsPage.js":"6","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedUpcomingMoviesPage.js":"7","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\topRatedMoviesPage.js":"8","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\loginPage.js":"9","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedSiteHeader\\index.js":"10","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\privateRoute\\index.js":"11","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\fireBase\\index.js":"12","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\api\\tmdb-api.js":"13","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\buttons\\addToFavorites.js":"14","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\buttons\\addReview.js":"15","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\buttons\\addToWatchList.js":"16","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\hooks\\useMovie.js":"17","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\movieReview\\index.js":"18","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedTemplateMovieListPage\\index.js":"19","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedMovieDetails\\index.js":"20","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\movieReviews\\index.js":"21","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedTemplateMoviePage\\index.js":"22","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\reviewForm\\index.js":"23","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\util.js":"24","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\globals\\fontawesome.js":"25","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedMovieList\\index.js":"26","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedFilterControls\\index.js":"27","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedMovieCard\\index.js":"28","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\registerPage.js":"29","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedFavouritesMoviesPage.js":"30","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedWatchListMoviesPage.js":"31","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedMovieReviewPage.js":"32","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedAddMovieReviewPage.js":"33"},{"size":2633,"mtime":1608153364797,"results":"34","hashOfConfig":"35"},{"size":735,"mtime":1608054648702,"results":"36","hashOfConfig":"35"},{"size":705,"mtime":1604604438605,"results":"37","hashOfConfig":"38"},{"size":3174,"mtime":1608207707078,"results":"39","hashOfConfig":"38"},{"size":691,"mtime":1608151888380,"results":"40","hashOfConfig":"35"},{"size":1666,"mtime":1607198102174,"results":"41","hashOfConfig":"35"},{"size":702,"mtime":1607198064895,"results":"42","hashOfConfig":"35"},{"size":625,"mtime":1607198121594,"results":"43","hashOfConfig":"35"},{"size":1391,"mtime":1608057626744,"results":"44","hashOfConfig":"35"},{"size":1189,"mtime":1608153708274,"results":"45","hashOfConfig":"35"},{"size":541,"mtime":1608033488068,"results":"46","hashOfConfig":"35"},{"size":470,"mtime":1608054535678,"results":"47","hashOfConfig":"35"},{"size":1595,"mtime":1608211028401,"results":"48","hashOfConfig":"38"},{"size":558,"mtime":1608151973858,"results":"49","hashOfConfig":"38"},{"size":370,"mtime":1604605349730,"results":"50","hashOfConfig":"35"},{"size":568,"mtime":1608151976964,"results":"51","hashOfConfig":"35"},{"size":322,"mtime":1606416425978,"results":"52","hashOfConfig":"35"},{"size":175,"mtime":1604077277200,"results":"53","hashOfConfig":"35"},{"size":1078,"mtime":1607197704015,"results":"54","hashOfConfig":"35"},{"size":9661,"mtime":1608205575089,"results":"55","hashOfConfig":"38"},{"size":1333,"mtime":1604076251822,"results":"56","hashOfConfig":"35"},{"size":446,"mtime":1607196364590,"results":"57","hashOfConfig":"35"},{"size":1977,"mtime":1604605499017,"results":"58","hashOfConfig":"35"},{"size":263,"mtime":1604076282296,"results":"59","hashOfConfig":"35"},{"size":334,"mtime":1607195191581,"results":"60","hashOfConfig":"38"},{"size":355,"mtime":1608205565383,"results":"61","hashOfConfig":"38"},{"size":1269,"mtime":1607179122490,"results":"62","hashOfConfig":"38"},{"size":939,"mtime":1608205739311,"results":"63","hashOfConfig":"38"},{"size":1182,"mtime":1608057511285,"results":"64","hashOfConfig":"35"},{"size":616,"mtime":1608151709597,"results":"65","hashOfConfig":"35"},{"size":618,"mtime":1608151866918,"results":"66","hashOfConfig":"35"},{"size":422,"mtime":1608153324688,"results":"67","hashOfConfig":"35"},{"size":414,"mtime":1608153332615,"results":"68","hashOfConfig":"35"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},"1iy2ipr",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12ull0m",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\index.js",["144"],"import UpdatedSiteHeader from './components/updatedSiteHeader'\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Redirect, Switch, Link } from \"react-router-dom\"    // CHANGED\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\r\nimport { AuthContextProvider } from \"./contexts/authContext\";\r\nimport PrivateRoute from \"./components/privateRoute\"\r\nimport UpdatedHomePage from \"./pages/updatedHomePage\";\r\nimport UpdatedMoviePage from './pages/updatedMovieDetailsPage';\r\nimport UpdatedFavoriteMoviesPage from './pages/updatedFavouritesMoviesPage';\r\nimport UpdatedWatchListMoviesPage from './pages/updatedWatchListMoviesPage';      // NEW\r\nimport UpdatedMovieReviewPage from \"./pages/updatedMovieReviewPage\";\r\nimport UpdatedUpcomingMoviesListPage from './pages/updatedUpcomingMoviesPage';\r\nimport TopRatedMoviesPage from './pages/topRatedMoviesPage';\r\nimport Login from \"./pages/loginPage\";\r\nimport Register from \"./pages/registerPage\";\r\nimport UpdatedAddMovieReviewPage from './pages/updatedAddMovieReviewPage';\r\nimport GenresContextProvider from \"./contexts/genresContext\";\r\nimport MoviesContextProvider from \"./contexts/moviesContext\";\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"jumbotron\">\r\n          <UpdatedSiteHeader />      {/* New Header  */}\r\n          <div className=\"container-fluid\">\r\n          <AuthContextProvider>\r\n          <MoviesContextProvider>\r\n          <GenresContextProvider>  {/* NEW */}\r\n            <Switch>\r\n              <Route exact path=\"/reviews/form\" component={UpdatedAddMovieReviewPage} />\r\n              <Route path=\"/reviews/:id\" component={UpdatedMovieReviewPage} />\r\n              <PrivateRoute exact path=\"/movies/favorites\" component={UpdatedFavoriteMoviesPage} />\r\n              <PrivateRoute exact path=\"/movies/watchlist\" component={UpdatedWatchListMoviesPage} />\r\n              <Route exact path=\"/movies/upcoming\" component={UpdatedUpcomingMoviesListPage} />\r\n              <Route exact path=\"/movies/toprated\" component={TopRatedMoviesPage} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/register\" component={Register} />\r\n              <Route path=\"/movies/:id\" component={UpdatedMoviePage} />\r\n              <Route path=\"/\" component={UpdatedHomePage} />\r\n              <Redirect from=\"*\" to=\"/\" />\r\n          </Switch>\r\n          </GenresContextProvider>\r\n          </MoviesContextProvider>\r\n          </AuthContextProvider> {/* NEW */}\r\n      </div> \r\n    </div>\r\n  </BrowserRouter>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));",["145","146"],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\contexts\\authContext.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\contexts\\genresContext.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\contexts\\moviesContext.js",[],["147","148"],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedHomePage.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedMovieDetailsPage.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedUpcomingMoviesPage.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\topRatedMoviesPage.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\loginPage.js",["149","150"],"import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React, { useCallback, useContext } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport Firebase from \"../components/fireBase/index\";\r\nimport { AuthContext } from \"../contexts/authContext\";\r\n\r\nconst Login = ({ history }) => {\r\n  const handleLogin = useCallback(\r\n    async event => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await Firebase\r\n          .auth()\r\n          .signInWithEmailAndPassword(email.value, password.value);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n      <br/>\r\n      <h2> Login Page </h2>\r\n      <br/>\r\n      <form onSubmit={handleLogin}>\r\n        <label>\r\n          <span>Email</span>\r\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n        </label>\r\n        <label>\r\n          <span>Password</span>\r\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n        </label>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Login);","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedSiteHeader\\index.js",["151"],"import React from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Firebase from \"../fireBase/index\"\r\n\r\nconst UpdatedSiteHeader = () => {\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand href=\"/\">\r\n      <img\r\n        alt=\"logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/1200px-IMDB_Logo_2016.svg.png\"\r\n        width=\"60\"\r\n        height=\"30\"\r\n        className=\"d-inline-block align-top\"\r\n      />{' '}\r\n    </Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"/movies/upcoming\">Upcoming</Nav.Link>\r\n      <Nav.Link href=\"/movies/toprated\">Top Rated</Nav.Link>\r\n      <Nav.Link href=\"/movies/favorites\">Favorites</Nav.Link>\r\n      <Nav.Link href=\"/movies/watchlist\">Watch List</Nav.Link>\r\n    </Nav>\r\n    <Form inline>\r\n      <Button variant=\"outline-info\" id=\"search\" onClick={() => Firebase.auth().signOut()}>Sign Out</Button>\r\n    </Form>\r\n  </Navbar>\r\n  );\r\n};\r\n\r\nexport default UpdatedSiteHeader;","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\privateRoute\\index.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\fireBase\\index.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\api\\tmdb-api.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\buttons\\addToFavorites.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\buttons\\addReview.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\buttons\\addToWatchList.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\hooks\\useMovie.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\movieReview\\index.js",["152"],"import React from \"react\";\r\n\r\nexport default ({ review }) => {\r\n  return (\r\n    <>\r\n      <p>Review By: {review.author} </p>\r\n      <p>{review.content} </p>\r\n    </>\r\n  );\r\n};","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedTemplateMovieListPage\\index.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedMovieDetails\\index.js",["153","154"],"import React from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Link } from \"react-router-dom\";\r\nimport Media from 'react-bootstrap/Media';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../../globals/fontawesome\";\r\n\r\nexport default ({ movie }) => {\r\n    return (\r\n        <>\r\n  <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n  <Row>\r\n    <Col sm={3}>\r\n      <Nav variant=\"pills\" className=\"flex-column\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"first\">Movie Details</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"second\">Movie Cast</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"third\">Movie Crew</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"fourth\">Movie Trailers</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"fifth\">Movie Images</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"sixth\">Similar Movies</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"seventh\">Recommendations</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </Col>\r\n    <Col sm={9}>\r\n      <Tab.Content>\r\n        <Tab.Pane eventKey=\"first\">\r\n        <Card>\r\n  <Card.Body>\r\n  <Media>\r\n  <img\r\n    width={200}\r\n    height={300}\r\n    className=\"mr-3\"\r\n    src={movie.poster_path\r\n        ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n        : \"./film-poster-placeholder.png\"}\r\n    alt={movie.title}\r\n  />\r\n  <Media.Body>\r\n    <h1> {movie.title} </h1>\r\n    <p> {movie.original_title} ({movie.status}) | {movie.tagline} | {movie.original_language} | <a href={movie.homepage}> <FontAwesomeIcon icon={[\"fas\", \"home\"]} size=\"1x\" /> </a> </p>\r\n    <h3>Overview</h3>\r\n    <p>\r\n      {movie.overview}\r\n    </p>\r\n    <ul className=\"list-group list-group-horizontal\">\r\n        <li key=\"ruh\" className=\"list-group-item list-group-item-dark\">\r\n          Runtime (min.)\r\n        </li>\r\n        <li key=\"rut\" className=\"list-group-item \">\r\n          {movie.runtime}\r\n        </li>\r\n        <li key=\"rdh\" className=\"list-group-item list-group-item-dark\">\r\n          Release Date\r\n        </li>\r\n        <li key=\"rdv\" className=\"list-group-item \">\r\n          {movie.release_date}\r\n        </li>\r\n      </ul>\r\n\r\n      <ul className=\"list-group list-group-horizontal\">\r\n        <li key=\"pop\" className=\"list-group-item list-group-item-dark\">\r\n          Popularity\r\n        </li>\r\n        <li key=\"poph\" className=\"list-group-item \">\r\n          {movie.popularity}\r\n        </li>\r\n        <li key=\"rdh\" className=\"list-group-item list-group-item-dark\">\r\n          Vote Count\r\n        </li>\r\n        <li key=\"rdv\" className=\"list-group-item \">\r\n          {movie.vote_count}\r\n        </li>\r\n        <li key=\"rdh\" className=\"list-group-item list-group-item-dark\">\r\n          Vote Average\r\n        </li>\r\n        <li key=\"rdv\" className=\"list-group-item \">\r\n          {movie.vote_average}\r\n        </li>\r\n      </ul>\r\n\r\n      <ul className=\"list-group list-group-horizontal\">\r\n        <li key=\"pop\" className=\"list-group-item list-group-item-dark\">\r\n          Revenue\r\n        </li>\r\n        <li key=\"poph\" className=\"list-group-item \">\r\n          {movie.revenue}\r\n        </li>\r\n        <li key=\"rdh\" className=\"list-group-item list-group-item-dark\">\r\n          Budget\r\n        </li>\r\n        <li key=\"rdv\" className=\"list-group-item \">\r\n          {movie.budget}\r\n        </li>\r\n      </ul>\r\n\r\n      <ul className=\"list-group list-group-horizontal\">\r\n        <li key=\"gh\" className=\"list-group-item list-group-item-dark\">\r\n          Genres\r\n        </li>\r\n        {movie.genres.map(g => (\r\n          <li key={g.name} className=\"list-group-item\">\r\n            {g.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul className=\"list-group list-group-horizontal\">\r\n        <li key=\"slh\" className=\"list-group-item list-group-item-dark\">\r\n          Spoken Languages\r\n        </li>\r\n        {movie.spoken_languages.map(lang => (\r\n          <li key={lang.name} className=\"list-group-item\">\r\n            {lang.name}\r\n          </li>\r\n        ))}\r\n        </ul>\r\n      <ul className=\"list-group list-group-horizontal\">\r\n        <li key=\"pch\" className=\"list-group-item list-group-item-dark\">\r\n          Production Companies\r\n        </li>\r\n        {movie.production_companies.map(pc => (\r\n          <li key={pc.name} className=\"list-group-item\">\r\n            {pc.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul className=\"list-group list-group-horizontal\">\r\n      <li key=\"pch\" className=\"list-group-item list-group-item-dark\">\r\n          Production Countries\r\n        </li>\r\n      {movie.production_countries.map(pcountries => (\r\n          <li key={pcountries.name} className=\"list-group-item\">\r\n            {pcountries.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n  </Media.Body>\r\n</Media>\r\n</Card.Body>\r\n</Card>\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"second\">\r\n        <h1> Cast </h1>\r\n<Row md=\"4\">{movie.credits.cast.map(cast => (\r\n    <Card style={{ width: '10rem' }}>\r\n    <Card.Img variant=\"top\" src={cast.profile_path\r\n              ? `https://image.tmdb.org/t/p/w500/${cast.profile_path}`\r\n              : \"./film-poster-placeholder.png\"} />\r\n    <Card.Body>\r\n          <Card.Title>{cast.name}</Card.Title>\r\n      <Card.Text>\r\n        <FontAwesomeIcon icon={[\"fas\", \"star\"]} />\r\n        <span> {cast.popularity}</span>\r\n        <FontAwesomeIcon icon={[\"fas\", \"user\"]} />\r\n        <span> {cast.character}</span>\r\n      </Card.Text>\r\n    </Card.Body>\r\n   </Card>\r\n    ))}\r\n    </Row>\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"third\">\r\n        <div />\r\n    <h1> Crew </h1>\r\n    <Row md=\"4\">{movie.credits.crew.map(crew => (\r\n    <Card style={{ width: '10rem' }}>\r\n    <Card.Img variant=\"top\" src={crew.profile_path\r\n              ? `https://image.tmdb.org/t/p/w500/${crew.profile_path}`\r\n              : \"./film-poster-placeholder.png\"} />\r\n    <Card.Body>\r\n          <Card.Title>{crew.name}</Card.Title>\r\n      <Card.Text>\r\n        <FontAwesomeIcon icon={[\"fas\", \"star\"]} />\r\n        <span> {crew.popularity}</span>\r\n        <FontAwesomeIcon icon={[\"fas\", \"user\"]} />\r\n        <span> {crew.job}</span>\r\n      </Card.Text>\r\n    </Card.Body>\r\n   </Card>\r\n    ))}\r\n    </Row>\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"fourth\">\r\n        <div />\r\n    <h1> Videos </h1>\r\n    <Row md=\"4\">{movie.videos.results.map(videos => (\r\n    <Card style={{ width: '10rem' }}>\r\n    <iframe width=\"215\" height=\"300\"\r\n    src={videos.key ? `https://www.youtube.com/embed/${videos.key}` : \"null\"}>\r\n    </iframe>\r\n    <Card.Body>\r\n          <Card.Text> <a href = {`https://www.youtube.com/watch?v=${videos.key}`}> Watch The Video Here! </a>  </Card.Text>\r\n          <Card.Title>{videos.name}</Card.Title>\r\n      <Card.Text>\r\n        <FontAwesomeIcon icon={[\"fas\", \"film\"]} />\r\n        <span> {videos.type}</span>\r\n        <FontAwesomeIcon icon={[\"fas\", \"window-restore\"]} />\r\n        <span> {videos.site}</span>\r\n      </Card.Text>\r\n    </Card.Body>\r\n   </Card>\r\n    ))}\r\n    </Row>\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"fifth\">\r\n        <div />\r\n    <h1> Images </h1>\r\n    <Row md=\"4\">{movie.images.backdrops.map(posters => (\r\n    <Card style={{ width: '10rem' }}>\r\n    <Card.Img variant=\"top\" src={posters.file_path\r\n              ? `https://image.tmdb.org/t/p/w500/${posters.file_path}`\r\n              : \"./film-poster-placeholder.png\"} />\r\n    <Card.Body>\r\n          <Card.Title>{posters.iso_639_1}</Card.Title>\r\n      <Card.Text>\r\n        <FontAwesomeIcon icon={[\"fas\", \"calendar\"]} />\r\n        <span> {posters.vote_average}</span>\r\n        <FontAwesomeIcon icon={[\"fas\", \"star\"]} />\r\n        <span> {posters.vote_count}</span>\r\n      </Card.Text>\r\n    </Card.Body>\r\n   </Card>\r\n    ))}\r\n    </Row>\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"sixth\">\r\n        <div />\r\n    <h1> Similar Movies</h1>\r\n    <Row md=\"4\">{movie.similar.results.map(s => (\r\n    <Card style={{ width: '10rem' }}>\r\n    <Link to={`/movies/${s.id}`}>\r\n    <Card.Img variant=\"top\" src={s.poster_path\r\n              ? `https://image.tmdb.org/t/p/w500/${s.poster_path}`\r\n              : \"./film-poster-placeholder.png\"} />\r\n    </Link>\r\n    <Card.Body>\r\n          <Card.Title>{s.title}</Card.Title>\r\n      <Card.Text>\r\n        <FontAwesomeIcon icon={[\"fas\", \"calendar\"]} />\r\n        <span> {s.release_date}</span>\r\n        <FontAwesomeIcon icon={[\"fas\", \"star\"]} />\r\n        <span> {s.popularity}</span>\r\n      </Card.Text>\r\n    </Card.Body>\r\n   </Card>\r\n    ))}\r\n    </Row>\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"seventh\">\r\n        <div />\r\n    <h1> Recommendations </h1>\r\n    <Row md=\"4\">{movie.recommendations.results.map(r => (\r\n    <Card style={{ width: '10rem' }}>\r\n    <Link to={`/movies/${r.id}`}>\r\n    <Card.Img variant=\"top\" src={r.poster_path\r\n              ? `https://image.tmdb.org/t/p/w500/${r.poster_path}`\r\n              : \"./film-poster-placeholder.png\"} />\r\n    </Link>\r\n    <Card.Body>\r\n          <Card.Title>{r.title}</Card.Title>\r\n      <Card.Text>\r\n        <FontAwesomeIcon icon={[\"fas\", \"calendar\"]} />\r\n        <span> {r.release_date}</span>\r\n        <FontAwesomeIcon icon={[\"fas\", \"star\"]} />\r\n        <span> {r.popularity}</span>\r\n      </Card.Text>\r\n    </Card.Body>\r\n   </Card>\r\n    ))}\r\n    </Row>\r\n        </Tab.Pane>\r\n\r\n      </Tab.Content>\r\n    </Col>\r\n  </Row>\r\n</Tab.Container>\r\n</>\r\n  );\r\n};","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\movieReviews\\index.js",["155","156"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMovieReviews } from \"../../api/tmdb-api\";\r\nimport { excerpt } from \"../../util\";\r\n\r\nexport default ({ movie }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMovieReviews(movie.id).then(reviews => {\r\n      setReviews(reviews);\r\n    });\r\n  }, []);\r\n  return (\r\n    <table className=\"table table-striped table-bordered table-hover\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Author</th>\r\n          <th scope=\"col\">Excerpt</th>\r\n          <th scope=\"col\">More</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {reviews.map(r => {\r\n            return (\r\n              <tr key={r.id}>\r\n                <td>{r.author}</td>\r\n                <td>{excerpt(r.content)}</td>\r\n                <td>\r\n                  {\" \"}\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/reviews/${r.id}`,\r\n                      state: {\r\n                        review: r,\r\n                        movie: movie\r\n                      }\r\n                    }}\r\n                  >\r\n                    Full Review\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedTemplateMoviePage\\index.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\reviewForm\\index.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\util.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\globals\\fontawesome.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedMovieList\\index.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedFilterControls\\index.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\components\\updatedMovieCard\\index.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\registerPage.js",["157","158"],"import React, { useCallback } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Firebase from \"../components/fireBase/index\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Register = ({ history }) => {\r\n  const handleRegister = useCallback(async event => {\r\n    event.preventDefault();\r\n    const { email, password } = event.target.elements;\r\n    try {\r\n      await Firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email.value, password.value);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n        <>\r\n      <div>\r\n      <br/>\r\n      <h2> Registration Page </h2>\r\n      <br/>\r\n      <form onSubmit={handleRegister}>\r\n        <label>\r\n          <span>Email</span>\r\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n        </label>\r\n        <label>\r\n          <span>Password</span>\r\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n        </label>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Register);","C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedFavouritesMoviesPage.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedWatchListMoviesPage.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedMovieReviewPage.js",[],"C:\\Users\\bb100\\Downloads\\assignment1\\moviesApp\\src\\pages\\updatedAddMovieReviewPage.js",[],{"ruleId":"159","severity":1,"message":"160","line":4,"column":50,"nodeType":"161","messageId":"162","endLine":4,"endColumn":54},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"163","replacedBy":"167"},{"ruleId":"165","replacedBy":"168"},{"ruleId":"159","severity":1,"message":"169","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":12},{"ruleId":"159","severity":1,"message":"170","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":14},{"ruleId":"159","severity":1,"message":"171","line":5,"column":8,"nodeType":"161","messageId":"162","endLine":5,"endColumn":19},{"ruleId":"172","severity":1,"message":"173","line":3,"column":1,"nodeType":"174","endLine":10,"endColumn":3},{"ruleId":"172","severity":1,"message":"173","line":12,"column":1,"nodeType":"174","endLine":297,"endColumn":3},{"ruleId":"175","severity":1,"message":"176","line":206,"column":5,"nodeType":"177","endLine":207,"endColumn":79},{"ruleId":"172","severity":1,"message":"173","line":6,"column":1,"nodeType":"174","endLine":49,"endColumn":3},{"ruleId":"178","severity":1,"message":"179","line":13,"column":6,"nodeType":"180","endLine":13,"endColumn":8,"suggestions":"181"},{"ruleId":"159","severity":1,"message":"169","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":12},{"ruleId":"159","severity":1,"message":"170","line":5,"column":8,"nodeType":"161","messageId":"162","endLine":5,"endColumn":14},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["182"],"no-negated-in-lhs",["183"],["182"],["183"],"'Form' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movie.id'. Either include it or remove the dependency array.","ArrayExpression",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},"Update the dependencies array to be: [movie.id]",{"range":"187","text":"188"},[385,387],"[movie.id]"]